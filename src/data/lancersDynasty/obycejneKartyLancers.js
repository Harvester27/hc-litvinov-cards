// Centr√°ln√≠ spr√°va obyƒçejn√Ωch karet HC Litv√≠nov Lancers
// Ka≈æd√° karta m√° sv√© ID, z√°kladn√≠ info a defaultn√≠ atributy

export const CARD_ATTRIBUTES = [
  { key: 'speed', name: 'Rychlost', icon: '‚ö°' },
  { key: 'shooting', name: 'St≈ôelba', icon: 'üéØ' },
  { key: 'passing', name: 'P≈ôihr√°vky', icon: 'üîÑ' },
  { key: 'defense', name: 'Obrana', icon: 'üõ°Ô∏è' },
  { key: 'physical', name: 'Fyziƒçka', icon: 'üí™' },
  { key: 'skating', name: 'Bruslen√≠', icon: '‚õ∏Ô∏è' },
  { key: 'handling', name: 'Veden√≠ puku', icon: 'üèí' },
  { key: 'checking', name: 'Napad√°n√≠', icon: 'üëä' },
  { key: 'positioning', name: 'Postaven√≠', icon: 'üìç' },
  { key: 'endurance', name: 'Vytrvalost', icon: 'üîã' }
];

// Ceny vylep≈°en√≠ atribut≈Ø (√∫rove≈à -> cena)
export const UPGRADE_COSTS = {
  1: 0,     // Start
  2: 100,   // 1->2
  3: 200,   // 2->3
  4: 400,   // 3->4
  5: 800,   // 4->5
  6: 1500,  // 5->6
  7: 2500,  // 6->7
  8: 4000,  // 7->8
  9: 6000,  // 8->9
  10: 10000 // 9->10 (MAX)
};

// V√Ωpoƒçet celkov√©ho overallu z atribut≈Ø
export const calculateOverall = (attributes) => {
  const values = Object.values(attributes);
  const sum = values.reduce((acc, val) => acc + val, 0);
  return Math.round(sum / values.length);
};

// V√Ωpoƒçet ceny vylep≈°en√≠
export const getUpgradeCost = (currentLevel) => {
  if (currentLevel >= 10) return null; // Max level
  return UPGRADE_COSTS[currentLevel + 1] || 0;
};

// Z√°kladn√≠ atributy pro novou kartu (v≈°echny na 1)
export const getDefaultAttributes = () => {
  const attrs = {};
  CARD_ATTRIBUTES.forEach(attr => {
    attrs[attr.key] = 1;
  });
  return attrs;
};

// NOV√â - Defaultn√≠ data karty vƒçetnƒõ vztahu
export const getDefaultCardData = () => ({
  attributes: getDefaultAttributes(),
  relationship: 0, // Pro obyƒçejn√© karty v≈ædy 0
  lastInviteRefused: null, // Datum posledn√≠ho odm√≠tnut√≠
  inviteCooldownDays: 30, // Cooldown 30 dn√≠ (mƒõs√≠c)
  mood: 50, // N√°lada hr√°ƒçe (0-100)
  sharedActivities: 0 // Poƒçet spoleƒçn√Ωch aktivit
});

// NOV√â - Funkce pro kontrolu cooldownu
export const canInvitePlayer = (cardData, currentGameDate) => {
  if (!cardData || !cardData.lastInviteRefused) return true;
  
  const lastRefused = new Date(cardData.lastInviteRefused);
  const daysSinceRefused = Math.floor((currentGameDate - lastRefused) / (1000 * 60 * 60 * 24));
  
  return daysSinceRefused >= (cardData.inviteCooldownDays || 30);
};

// NOV√â - Funkce pro z√≠sk√°n√≠ dn√≠ do dal≈°√≠ho pozv√°n√≠
export const getDaysUntilCanInvite = (cardData, currentGameDate) => {
  if (!cardData || !cardData.lastInviteRefused) return 0;
  
  const lastRefused = new Date(cardData.lastInviteRefused);
  const daysSinceRefused = Math.floor((currentGameDate - lastRefused) / (1000 * 60 * 60 * 24));
  const cooldownDays = cardData.inviteCooldownDays || 30;
  
  return Math.max(0, cooldownDays - daysSinceRefused);
};

// NOV√â - Funkce pro update cooldownu
export const updatePlayerCooldown = (cardData, currentGameDate) => {
  return {
    ...cardData,
    lastInviteRefused: currentGameDate.toISOString()
  };
};

// NOV√â - Funkce pro zv√Ω≈°en√≠ vztahu (pro budouc√≠ pou≈æit√≠)
export const improveRelationship = (cardData, amount = 1) => {
  return {
    ...cardData,
    relationship: Math.min(10, (cardData.relationship || 0) + amount),
    sharedActivities: (cardData.sharedActivities || 0) + 1
  };
};

// Datab√°ze v≈°ech obyƒçejn√Ωch karet HC Litv√≠nov Lancers
export const OBYCEJNE_KARTY_LANCERS = [
  {
    id: 'adamschubadaobyc',
    name: 'Adam Schubada',
    position: '√ötoƒçn√≠k',
    number: 17,
    birthYear: 1998,
    height: 185,
    weight: 88,
    shoots: 'Prav√°',
    history: 'Odchovanec HC Litv√≠nov. Rychl√Ω a technick√Ω √∫toƒçn√≠k s v√Ωbornou st≈ôelou. Nƒõkolikan√°sobn√Ω reprezentant v ml√°de≈ænick√Ωch kategori√≠ch.',
    achievements: [
      'Mistr ƒåR U20 (2018)',
      'Nejlep≈°√≠ st≈ôelec juniorsk√© ligy (2017)',
      'Debut v extralize v 17 letech'
    ],
    imageUrl: '/CardGames/obyckartylancers/adamschubadaobyc.png'
  },
  {
    id: 'janschubadaobyc',
    name: 'Jan Schubada',
    position: '√ötoƒçn√≠k',
    number: 23,
    birthYear: 1996,
    height: 188,
    weight: 92,
    shoots: 'Lev√°',
    history: 'Bratr Adama Schubady. Silov√Ω forvard s v√Ωbornou hrou p≈ôed brankou. Kapit√°n juniorsk√©ho t√Ωmu.',
    achievements: [
      'Kapit√°n juniorsk√©ho t√Ωmu (2016)',
      'V√≠tƒõz kanadsk√©ho bodov√°n√≠ U18',
      '50+ bod≈Ø v juniorsk√© lize'
    ],
    imageUrl: '/CardGames/obyckartylancers/janschubadaobyc.png'
  },
  {
    id: 'ostepanovskyobyc',
    name: 'Old≈ôich ≈†tƒõpanovsk√Ω',
    position: 'Obr√°nce',
    number: 5,
    birthYear: 1997,
    height: 192,
    weight: 95,
    shoots: 'Lev√°',
    history: 'Defenzivn√≠ obr√°nce s tvrdou st≈ôelou. Specialista na oslaben√≠. Vychov√°n v Litv√≠novƒõ.',
    achievements: [
      'Nejlep≈°√≠ obr√°nce juniorsk√© ligy (2017)',
      'Reprezentant U20',
      'Tvrd√° st≈ôela p≈ôes 150 km/h'
    ],
    imageUrl: '/CardGames/obyckartylancers/ostepanovskyobyc.png'
  },
  {
    id: 'michaelanovakovaobyc',
    name: 'Michaela Nov√°kov√°',
    position: 'Brank√°≈ô',
    number: 32,
    birthYear: 1999,
    height: 172,
    weight: 68,
    shoots: 'Prav√°',
    history: 'Jedna z nejtalentovanƒõj≈°√≠ch hr√°ƒçek ≈æensk√©ho hokeje. Technick√° hr√°ƒçka s v√Ωborn√Ωm p≈ôehledem.',
    achievements: [
      'Mistrynƒõ svƒõta U18 (2017)',
      'MVP ≈æensk√© ligy (2021)',
      'Olympijsk√° reprezentantka'
    ],
    imageUrl: '/CardGames/obyckartylancers/michaelanovakovaobyc.png'
  },
  {
    id: 'vlastanistorobyc',
    name: 'Vlastimil Nistor',
    position: 'Brank√°≈ô',
    number: 71,
    birthYear: 1995,
    height: 180,
    weight: 82,
    shoots: 'Prav√°',
    history: 'Rychl√Ω k≈ô√≠dlo s v√Ωborn√Ωm bruslen√≠m. Specialista na p≈ôesilovky. Odchovanec Litv√≠nova.',
    achievements: [
      'Nejrychlej≈°√≠ brusla≈ô t√Ωmu',
      '100+ extraligov√Ωch z√°pas≈Ø',
      'Mistr ƒåR s juniory (2015)'
    ],
    imageUrl: '/CardGames/obyckartylancers/vlastanistorobyc.png'
  },
  {
    id: 'pavelnovakobyc',
    name: 'Pavel Nov√°k',
    position: 'Obr√°nce',
    number: 88,
    birthYear: 1994,
    height: 183,
    weight: 86,
    shoots: 'Prav√°',
    history: 'Centr s v√Ωbornou rozehr√°vkou. L√≠dr t√Ωmu na ledƒõ i mimo nƒõj. Dlouholet√Ω kapit√°n junior≈Ø.',
    achievements: [
      'Kapit√°n A-t√Ωmu',
      '200+ bod≈Ø v juniorsk√© lize',
      'Dr≈æitel Zlat√© helmy junior≈Ø'
    ],
    imageUrl: '/CardGames/obyckartylancers/pavelnovakobyc.png'
  },
  {
    id: 'jindrabelingerobyc',
    name: 'Jind≈ôich Belinger',
    position: 'Obr√°nce',
    number: 3,
    birthYear: 1996,
    height: 189,
    weight: 91,
    shoots: 'Prav√°',
    history: 'Ofenzivn√≠ obr√°nce s v√Ωbornou rozehr√°vkou. Specialista na p≈ôesilovky. Bratr Ji≈ô√≠ho.',
    achievements: [
      'Nejproduktivnƒõj≈°√≠ obr√°nce U20',
      'Asistent kapit√°na',
      'Reprezentant v≈°ech ml√°de≈ænick√Ωch kategori√≠'
    ],
    imageUrl: '/CardGames/obyckartylancers/jindrabelingerobyc.png'
  },
  {
    id: 'jiribelingerobyc',
    name: 'Ji≈ô√≠ Belinger',
    position: 'Obr√°nce',
    number: 7,
    birthYear: 1998,
    height: 186,
    weight: 88,
    shoots: 'Lev√°',
    history: 'Mlad≈°√≠ bratr Jind≈ôicha. Spolehliv√Ω defenzivn√≠ obr√°nce. Mistr blokov√°n√≠ st≈ôel.',
    achievements: [
      'Nejlep≈°√≠ +/- statistika v t√Ωmu',
      'Mistr v blokov√°n√≠ st≈ôel',
      '≈Ωelezn√Ω mu≈æ - 100+ z√°pas≈Ø v ≈ôadƒõ'
    ],
    imageUrl: '/CardGames/obyckartylancers/jiribelingerobyc.png'
  },
  {
    id: 'maternaobyc',
    name: 'Va≈°ek Materna',
    position: '√ötoƒçn√≠k',
    number: 15,
    birthYear: 1997,
    height: 178,
    weight: 79,
    shoots: 'Lev√°',
    history: 'Technick√Ω centr s v√Ωbornou hrou v p≈ôesilovk√°ch. Kreativn√≠ hr√°ƒç s p≈ôehledem.',
    achievements: [
      'Nejlep≈°√≠ nahr√°vaƒç juniorsk√© ligy',
      'Talent roku HC Litv√≠nov (2016)',
      'Dr≈æitel rekordu v asistenc√≠ch za sez√≥nu'
    ],
    imageUrl: '/CardGames/obyckartylancers/maternaobyc.png'
  },
  {
    id: 'ondrahrubyobyc',
    name: 'Ond≈ôej Hrub√Ω',
    position: '√ötoƒçn√≠k',
    number: 30,
    birthYear: 1996,
    height: 190,
    weight: 87,
    shoots: 'Lev√°',
    history: 'Talentovan√Ω brank√°≈ô s v√Ωborn√Ωmi reflexy. Odchovanec Litv√≠nova. Ment√°lnƒõ siln√Ω.',
    achievements: [
      'Nejlep≈°√≠ brank√°≈ô juniorsk√© ligy (2016)',
      '√öspƒõ≈°nost z√°krok≈Ø p≈ôes 93%',
      '5 ƒçist√Ωch kont za sez√≥nu'
    ],
    imageUrl: '/CardGames/obyckartylancers/ondrahrubyobyc.png'
  },
  {
    id: 'gustavtomanobyc',
    name: 'Gustav Toman',
    position: '√ötoƒçn√≠k',
    number: 12,
    birthYear: 1997,
    height: 182,
    weight: 84,
    shoots: 'Prav√°',
    history: 'Rychl√Ω a technick√Ω √∫toƒçn√≠k s v√Ωbornou st≈ôelou. Odchovanec Litv√≠nova s velk√Ωm potenci√°lem.',
    achievements: [
      'Nejlep≈°√≠ st≈ôelec juniorsk√© ligy (2018)',
      'Reprezentant U20',
      'Debut v extralize v 18 letech'
    ],
    imageUrl: '/CardGames/obyckartylancers/gustavtomanobyc.png'
  },
  {
    id: 'janhanusobyc',
    name: 'Jan Hanu≈°',
    position: 'Obr√°nce',
    number: 22,
    birthYear: 1996,
    height: 190,
    weight: 93,
    shoots: 'Lev√°',
    history: 'Fyzicky siln√Ω obr√°nce s v√Ωbornou rozehr√°vkou. L√≠dr defenzivy.',
    achievements: [
      'Nejlep≈°√≠ obr√°nce juniorsk√© ligy (2017)',
      'Kapit√°n juniorsk√©ho t√Ωmu',
      'Mistr ƒåR U20 (2016)'
    ],
    imageUrl: '/CardGames/obyckartylancers/janhanusobyc.png'
  },
  {
    id: 'mariandlugopolskyobyc',
    name: 'Mari√°n Dlugopolsk√Ω',
    position: '√ötoƒçn√≠k',
    number: 18,
    birthYear: 1998,
    height: 185,
    weight: 87,
    shoots: 'Prav√°',
    history: 'Silov√Ω forvard s v√Ωbornou hrou p≈ôed brankou. Specialista na dor√°≈æky.',
    achievements: [
      'V√≠tƒõz kanadsk√©ho bodov√°n√≠ U18',
      'Nejlep≈°√≠ hr√°ƒç play-off junior≈Ø',
      '100+ bod≈Ø v juniorsk√© lize'
    ],
    imageUrl: '/CardGames/obyckartylancers/mariandlugopolskyobyc.png'
  },
  {
    id: 'luboscoufalobyc',
    name: 'Lubo≈° Coufal',
    position: 'Obr√°nce',
    number: 44,
    birthYear: 1997,
    height: 188,
    weight: 90,
    shoots: 'Prav√°',
    history: 'Defenzivn√≠ specialista s tvrdou hrou. Mistr v blokov√°n√≠ st≈ôel.',
    achievements: [
      'Nejlep≈°√≠ +/- statistika v lize',
      'Specialista na oslaben√≠',
      'Reprezentant U20'
    ],
    imageUrl: '/CardGames/obyckartylancers/luboscoufalobyc.png'
  },
  {
    id: 'petrpetrovobyc',
    name: 'Petr Petrov',
    position: '√ötoƒçn√≠k',
    number: 91,
    birthYear: 1999,
    height: 179,
    weight: 78,
    shoots: 'Lev√°',
    history: 'Rychl√Ω k≈ô√≠dlo s v√Ωborn√Ωm bruslen√≠m. Kreativn√≠ hr√°ƒç s v√Ωbornou technikou.',
    achievements: [
      'Nejrychlej≈°√≠ brusla≈ô juniorsk√© ligy',
      'Talent roku HC Litv√≠nov (2019)',
      'Dr≈æitel rekordu v asistenc√≠ch za sez√≥nu'
    ],
    imageUrl: '/CardGames/obyckartylancers/petrpetrovobyc.png'
  },
  {
    id: 'tomasturecekobyc',
    name: 'Tom√°≈° Tureƒçek',
    position: 'Obr√°nce',
    number: 33,
    birthYear: 1996,
    height: 194,
    weight: 98,
    shoots: 'Lev√°',
    history: 'Nejvy≈°≈°√≠ obr√°nce t√Ωmu s v√Ωborn√Ωm p≈ôehledem. Specialista na p≈ôesilovky.',
    achievements: [
      'Tvrd√° st≈ôela p≈ôes 160 km/h',
      'Nejproduktivnƒõj≈°√≠ obr√°nce U20',
      'Mistr ƒåR s juniory (2016)'
    ],
    imageUrl: '/CardGames/obyckartylancers/tomasturecekobyc.png'
  }
];

// Funkce pro z√≠sk√°n√≠ karty podle ID
export const getCardById = (cardId) => {
  return OBYCEJNE_KARTY_LANCERS.find(card => card.id === cardId);
};

// Funkce pro z√≠sk√°n√≠ n√°hodn√Ωch karet (pro pack opening)
export const getRandomCards = (count = 3) => {
  const shuffled = [...OBYCEJNE_KARTY_LANCERS].sort(() => 0.5 - Math.random());
  return shuffled.slice(0, count);
};

// Funkce pro z√≠sk√°n√≠ karet podle pozice
export const getCardsByPosition = (position) => {
  return OBYCEJNE_KARTY_LANCERS.filter(card => card.position === position);
};

// Export pro pou≈æit√≠ v jin√Ωch souborech
export default {
  CARD_ATTRIBUTES,
  UPGRADE_COSTS,
  OBYCEJNE_KARTY_LANCERS,
  calculateOverall,
  getUpgradeCost,
  getDefaultAttributes,
  getDefaultCardData,
  canInvitePlayer,
  getDaysUntilCanInvite,
  updatePlayerCooldown,
  improveRelationship,
  getCardById,
  getRandomCards,
  getCardsByPosition
};